name: CI

on:
  repository_dispatch:
    types: [run-tests]
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest



    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Compile and test on remote device
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SECRET_IP }}
          username: ${{ secrets.SECRET_USER}}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SECRET_PORT }}
          script: |
            # Initialize a variable to indicate if any command failed
            failed=false
            ls
            cd ./testDir
            git clone git@github.com:EPFLRocketTeam/C_AV_SIL.git
            cd C_AV_SIL
            git checkout ${{ github.head_ref }}
            git submodule update --init --recursive --remote
            if [ -n "${{ github.event.client_payload.branch }}" ]; then
              git submodule set-branch --branch ${{ github.event.client_payload.branch }} ./2024_C_AV_RPI/
              git checkout ${{ github.event.client_payload.branch }}
            else 
            git submodule set-branch --branch main ./2024_C_AV_RPI/
            git checkout main
            fi
            

            cd 2024_C_AV_RPI
            git submodule update --init --recursive --remote
            cd ..
            mkdir build
            cd build
            cmake ..
            make
             if [ $? -ne 0 ]; then
              failed=true
            fi
            ## Add tests from here
            
            ## Add tests above
            cd ../..
            

            if [ "$failed" = true ]; then
              status="failure"
            else
              status="success"
            fi
            
  
  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Temp
        run: echo temp
      #- name: Bmp test
      #  uses: appleboy/ssh-action@v1.0.3
      #  with:
      #    host: ${{ secrets.SECRET_IP }}
      #    username: ${{ secrets.SECRET_USER}}
      #    password: ${{ secrets.SSH_PASS }}
      #    port: ${{ secrets.SECRET_PORT }}
      #    script: |
      #      cd ./testDir/C_AV_SIL/build/2024_C_AV_RPI
      #      ls
      #      sudo ./BMP390_test || exit 1
      #      
#
#
      #- name: gps test
      #  uses: appleboy/ssh-action@v1.0.3
      #  with:
      #    host: ${{ secrets.SECRET_IP }}
      #    username: ${{ secrets.SECRET_USER}}
      #    password: ${{ secrets.SSH_PASS }}
      #    port: ${{ secrets.SECRET_PORT }}
      #    script: |
      #      cd ./testDir/C_AV_SIL/build/2024_C_AV_RPI
      #      sudo ./BMP390_test || exit 1
#
      #- name: LoRa test
      #  uses: appleboy/ssh-action@v1.0.3
      #  with:
      #    host: ${{ secrets.SECRET_IP }}
      #    username: ${{ secrets.SECRET_USER}}
      #    password: ${{ secrets.SSH_PASS }}
      #    port: ${{ secrets.SECRET_PORT }}
      #    script: |
      #      cd ./testDir/C_AV_SIL/build/2024_C_AV_RPI
      #      sudo ./BMP390_test || exit 1
      #      
      #
#
      #- name: ADXL test
      #  uses: appleboy/ssh-action@v1.0.3
      #  with:
      #    host: ${{ secrets.SECRET_IP }}
      #    username: ${{ secrets.SECRET_USER}}
      #    password: ${{ secrets.SSH_PASS }}
      #    port: ${{ secrets.SECRET_PORT }}
      #    script: |
      #      cd ./testDir/C_AV_SIL/build/2024_C_AV_RPI
      #      sudo ./ADXL375_test || exit 1


  coverage:
    needs: tests
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Analyse coverage
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SECRET_IP }}
          username: ${{ secrets.SECRET_USER}}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SECRET_PORT }}
          script: |
            cd ./testDir/C_AV_SIL/build/2024_C_AV_RPI
            find . -name "*.gcda" -exec gcov {} \;

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=EPFLRocketTeam_C_AV_SIL
            -Dsonar.organization=epflrocketteam-1
            -Dsonar.token${{secrets.tokenMarin}}
            -Dsonar.sources=2024_C_AV_RPI/src
            -Dsonar.tests=2024_C_AV_RPI/tests
            -Dsonar.scm.provider=git
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            

  clean:
    needs: coverage
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Clean repo
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SECRET_IP }}
          username: ${{ secrets.SECRET_USER}}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SECRET_PORT }}
          script: |
            cd ./testDir
            rm -r C_AV_SIL

      
          
          

